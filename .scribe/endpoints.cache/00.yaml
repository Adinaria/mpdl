## Autogenerated by Scribe. DO NOT MODIFY.

name: Authentication
description: |-

  API endpoints for user authentication and registration
endpoints:
  -
    httpMethods:
      - POST
    uri: api/v1/auth/register
    metadata:
      groupName: Authentication
      groupDescription: |-

        API endpoints for user authentication and registration
      subgroup: ''
      subgroupDescription: ''
      title: 'Register a new user'
      description: 'Creates a new user account and returns an authentication token.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: "The user's first name."
        required: true
        example: John
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      last_name:
        name: last_name
        description: "The user's last name."
        required: true
        example: Doe
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: "The user's email address."
        required: true
        example: john.doe@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: "The user's password. Must be at least 8 characters."
        required: true
        example: password123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'Password confirmation. Must match password.'
        required: true
        example: password123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: John
      last_name: Doe
      email: john.doe@example.com
      password: password123
      password_confirmation: password123
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "token": "1|abc123def456ghi789jkl012mno345pqr678stu901vwx234yz",
            "user": [
              {
                "uuid": "550e8400-e29b-41d4-a716-446655440000",
                "name": "John",
                "last_name": "Doe",
                "email": "john.doe@example.com",
              }
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The given data was invalid.",
            "errors": {
              "email": ["The email has already been taken."],
              "password": ["The password must be at least 8 characters."]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/auth/login
    metadata:
      groupName: Authentication
      groupDescription: |-

        API endpoints for user authentication and registration
      subgroup: ''
      subgroupDescription: ''
      title: 'Login user'
      description: 'Authenticates a user with email and password, returns an authentication token.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: "The user's email address."
        required: true
        example: john.doe@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: "The user's password."
        required: true
        example: password123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      email: john.doe@example.com
      password: password123
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "token": "1|abc123def456ghi789jkl012mno345pqr678stu901vwx234yz",
            "user": [
              {
                "uuid": "550e8400-e29b-41d4-a716-446655440000",
                "name": "John",
                "last_name": "Doe",
                "email": "john.doe@example.com",
              }
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "errors": {
              "email": "Invalid email or password"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The given data was invalid.",
            "errors": {
              "email": ["The email field is required."],
              "password": ["The password field is required."]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/auth/logout
    metadata:
      groupName: Authentication
      groupDescription: |-

        API endpoints for user authentication and registration
      subgroup: ''
      subgroupDescription: ''
      title: 'Logout user'
      description: "Revokes the current user's authentication token."
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Logged out successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "message": "Unauthenticated."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
